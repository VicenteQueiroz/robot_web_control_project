version: '3.8'

services:

  roscore:
    build:
      context: ./roscore
      dockerfile: Dockerfile
    container_name: roscore_container
    networks:
      - ros_network

  grpc_server:
    tty: true
    build:
      context: ./grpc_server
    container_name: grpc_server
    ports:
      - 50051:50051
    environment:
      - ROS_MASTER_URI=http://roscore_container:11311
      - ROS_HOSTNAME=grpc_server
    depends_on:
      - roscore
    networks:
      - ros_network

  simulation:
    tty: true
    build:
      context: ./simulation
    container_name: simulation_container
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      # - ./simulation/src:/ros_ws/src/simulation/src
    environment:
      - ROS_MASTER_URI=http://roscore_container:11311
      - ROS_HOSTNAME=simulation_container
      - DISPLAY=${DISPLAY}
    depends_on:
      - roscore
    networks:
      - ros_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - grpc_server
      - envoy
    networks:
      - ros_network

  envoy:
    image: envoyproxy/envoy:v1.19.1
    container_name: envoy
    volumes:
      - ./frontend/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "8080:8080"
    depends_on:
      - grpc_server
    networks:
      - ros_network

networks:
  ros_network:
    driver: bridge
